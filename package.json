{
  "name": "heart-api",
  "version": "1.3.1",
  "description": "API that can be used to retrieve various data that is found in a variety of places. An ideal use case is to retrieve social media information for specific services.",
  "main": "./src/app.ts",
  "scripts": {
    "fresh-install": "rm -rf node_modules; npm install --no-optional",
    "run-mocha-tests": "nyc --config './config/.nycrc.json' mocha --config './config/mocharc.json' 'unit-test/**/*.ts'",
    "test": "env-cmd -e test npm run run-mocha-tests",
    "mutation": "env-cmd -e test stryker run config/stryker.conf.json",
    "integration-test": "env-cmd -e test cucumber-js --config config/cucumber.js",
    "start": "env-cmd -e dev nodemon --ext ts --exec ts-node -r tsconfig-paths/register ./src/app.ts",
    "start-prod": "env-cmd -e prod nodemon --ext ts --exec ts-node -r tsconfig-paths/register ./src/app.ts",
    "build": "rm -rf dist && tsc && cp ./package.json ./dist && cp ./.env-cmdrc.json ./dist && cp -r ./certs ./dist && cp ./tsconfig.json ./dist",
    "upload-production": "npm run build && bash artifact-transfer.sh 'ec2-3-20-117-123.us-east-2.compute.amazonaws.com'",
    "restage-production": "bash docker-restage.sh 'ec2-3-20-117-123.us-east-2.compute.amazonaws.com'",
    "deploy-production": "npm run upload-production && npm run restage-production",
    "start-built-api": "env-cmd -e prod node -r tsconfig-paths/register -r ts-node/register -r tsconfig-paths/register ./src/app.js",
    "local-start": "npm run build && cd ./dist && npm run start-built-api",
    "docker-start": "npm run start-built-api",
    "doppler-checkout-dev": "doppler setup -p heart-api -c dev --no-interactive",
    "doppler-checkout-prod": "doppler setup -p heart-api -c prod --no-interactive",
	 "upload-certs-dev": "npm run doppler-checkout-dev && cat certs/private.key | doppler secrets set SSL_PRIVATE_KEY && cat certs/ca_bundle.crt | doppler secrets set SSL_CA_BUNDLE_CRT && cat certs/certificate.crt | doppler secrets set SSL_CERTIFICATE_CRT && cat certs/mongoDB-heart-api-X509.pem | doppler secrets set MONGO_DB_SSL_CERT && cat certs/jwt.key | doppler secrets set JWT_PRIVATE_KEY && cat certs/jwt.pub | doppler secrets set JWT_PUBLIC_KEY",
	 "upload-certs-prod": "npm run doppler-checkout-prod && cat certs/private.key | doppler secrets set SSL_PRIVATE_KEY && cat certs/ca_bundle.crt | doppler secrets set SSL_CA_BUNDLE_CRT && cat certs/certificate.crt | doppler secrets set SSL_CERTIFICATE_CRT && cat certs/mongoDB-heart-api-X509.pem | doppler secrets set MONGO_DB_SSL_CERT && cat certs/jwt.key | doppler secrets set JWT_PRIVATE_KEY && cat certs/jwt.pub | doppler secrets set JWT_PUBLIC_KEY",
    "download-certs-dev": "npm run doppler-checkout-dev && mkdir certs && doppler secrets get --plain SSL_PRIVATE_KEY > certs/private.key; doppler secrets get --plain SSL_CA_BUNDLE_CRT > certs/ca_bundle.crt; doppler secrets get --plain SSL_CERTIFICATE_CRT > certs/certificate.crt; doppler secrets get --plain MONGO_DB_SSL_CERT > certs/mongoDB-heart-api-X509.pem; doppler secrets get --plain JWT_PRIVATE_KEY > certs/jwt.key; doppler secrets get --plain JWT_PUBLIC_KEY > certs/jwt.pub",
    "download-certs-prod": "npm run doppler-checkout-dev && mkdir certs && doppler secrets get --plain SSL_PRIVATE_KEY > certs/private.key; doppler secrets get --plain SSL_CA_BUNDLE_CRT > certs/ca_bundle.crt; doppler secrets get --plain SSL_CERTIFICATE_CRT > certs/certificate.crt; doppler secrets get --plain MONGO_DB_SSL_CERT > certs/mongoDB-heart-api-X509.pem; doppler secrets get --plain JWT_PRIVATE_KEY > certs/jwt.key; doppler secrets get --plain JWT_PUBLIC_KEY > certs/jwt.pub",
    "create-env-file": "doppler secrets --config $DOPPLER_CONFIG download --no-file --format json | jq \"{$DOPPLER_CONFIG: {YOUTUBE_API_KEY: .YOUTUBE_API_KEY, HEART_API_KEY: .HEART_API_KEY, HEART_API_DB_BASE_URI: .HEART_API_DB_BASE_URI, MORGAN_LOG_LEVEL: .MORGAN_LOG_LEVEL}}\" > .env.${DOPPLER_CONFIG}.json",
    "create-env": "npm run doppler-checkout-dev && export DOPPLER_CONFIG='dev' && npm run create-env-file; export DOPPLER_CONFIG='prod' && npm run create-env-file; export DOPPLER_CONFIG='test' && npm run create-env-file; jq --tab -s '.[0] * .[1] * .[2]' .env.dev.json .env.test.json .env.prod.json > .env-cmdrc.json; rm .env.dev.json .env.test.json .env.prod.json"
  },
  "keywords": [
    "heart",
    "api"
  ],
  "author": "Javi Gomez",
  "license": "ISC",
  "dependencies": {
    "axios": "0.27.2",
    "cors": "2.8.5",
    "express": "4.18.1",
    "fs": "0.0.2",
    "http": "0.0.1-security",
    "https": "1.0.0",
    "jsonwebtoken": "^8.5.1",
    "lodash.sample": "4.2.1",
    "lodash.uniq": "^4.2.0",
    "logger": "0.0.1",
    "moize": "6.1.3",
    "mongoose": "6.6.2",
    "morgan": "1.10.0"
  },
  "devDependencies": {
    "@cucumber/cucumber": "8.6.0",
    "@stryker-mutator/core": "6.2.2",
    "@stryker-mutator/mocha-runner": "6.2.2",
    "@stryker-mutator/typescript-checker": "6.2.2",
    "@types/chai": "4.3.3",
    "@types/chai-http": "4.2.0",
    "@types/cors": "2.8.12",
    "@types/cucumber": "7.0.0",
    "@types/express": "4.17.14",
    "@types/jsonwebtoken": "8.5.9",
    "@types/lodash.sample": "4.2.7",
    "@types/lodash.uniq": "4.5.7",
    "@types/mocha": "9.1.1",
    "@types/morgan": "1.9.3",
    "@types/node": "16.11.62",
    "@types/rewire": "2.5.28",
    "@types/sinon": "10.0.13",
    "@types/supertest": "2.0.12",
    "chai": "4.3.6",
    "chai-http": "4.3.0",
    "mocha": "10.0.0",
    "mocha-suppress-logs": "0.3.1",
    "nodemon": "2.0.20",
    "nyc": "15.1.0",
    "pactum": "3.2.2",
    "rewire": "6.0.0",
    "sinon": "14.0.0",
    "supertest": "6.2.4",
    "ts-node": "10.9.1",
    "tsconfig-paths": "4.1.0",
    "tslint": "6.1.3",
    "typescript": "4.8.4"
  }
}
